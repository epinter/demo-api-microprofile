plugins {
    id 'java'
    id "com.microsoft.azure.azurewebapp" version "1.10.0"
    id("fish.payara.micro-gradle-plugin") version "2.0.1"
}

group = 'dev.pinter'
version = '0.1'

payaraMicro {
    payaraVersion = '6.2024.2'
    deployWar = false
    useUberJar = true
    daemon = false
    commandLineOptions = [port: 8080]
}

war {
    archiveFileName = 'ROOT.war'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    implementation 'org.eclipse.microprofile:microprofile:6.1'
    implementation 'org.microprofile-ext.openapi-ext:openapi-ui:2.0.0'
}

test {
    useJUnitPlatform()
}

ext {
    azResourceGroup = ''
    azWebapp = ''
}

azurewebapp {
    subscription = ''
    resourceGroup = azResourceGroup
    appName = azWebapp
    pricingTier = 'B1'
    region = 'eastus'
    runtime {
        os = 'Linux'
        webContainer = 'Java SE'
        javaVersion = 'Java 17'
    }
}

import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

tasks.register('setStartupCommand', Exec) {
    OperatingSystem OS = DefaultNativePlatform.currentOperatingSystem
    def javaCommand = 'java' +
            ' --add-modules java.se ' +
            ' --add-exports java.base/jdk.internal.ref=ALL-UNNAMED ' +
            ' --add-opens java.base/java.net=ALL-UNNAMED' +
            ' --add-opens java.base/java.lang=ALL-UNNAMED' +
            ' --add-opens java.base/sun.net.www.protocol.jar=ALL-UNNAMED' +
            ' --add-opens java.base/java.io=ALL-UNNAMED' +
            ' --add-opens java.base/java.util=ALL-UNNAMED' +
            ' --add-opens java.base/java.nio=ALL-UNNAMED' +
            ' --add-opens java.base/sun.nio.ch=ALL-UNNAMED'+
            ' --add-opens java.base/jdk.internal.loader=ALL-UNNAMED' +
            ' --add-opens java.management/sun.management=ALL-UNNAMED' +
            ' --add-opens jdk.management/com.sun.management.internal=ALL-UNNAMED' +
            ' -Dfile.encoding=UTF-8 -jar /home/site/wwwroot/app.jar --port 80' +
            ' --nocluster --nohazelcast --nohostaware'

    if (OS.isWindows()) {
        commandLine 'cmd', '/c', 'az', 'webapp', 'config', 'set', '-n', azWebapp, '-g', azResourceGroup,
                '--startup-file', javaCommand
    } else {
        commandLine 'az', 'webapp', 'config', 'set', '-n', azWebapp, '-g', azResourceGroup,
                '--startup-file', javaCommand
    }
}

tasks.azureWebAppDeploy.group('other')
tasks.register('deployUberJar') {
    group 'azurewebapp'
    dependsOn 'microBundle'
    doLast {
        tasks.azureWebAppDeploy.setArtifactFile(layout.buildDirectory.dir("libs").get().file("ROOT-microbundle.jar").toString())
        tasks.azureWebAppDeploy.deploy()
    }
}